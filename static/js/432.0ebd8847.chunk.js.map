{"version":3,"file":"static/js/432.0ebd8847.chunk.js","mappings":"kSAgHA,UA9FqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MAoBjB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,UAAU,OAAOC,SAAS,KAAIC,SAAA,EACvCC,EAAAA,EAAAA,KAACC,EAAAA,GAAW,KACZN,EAAAA,EAAAA,MAACO,EAAAA,EAAG,CAACC,GAAIC,EAAAA,GAAaL,SAAA,EACpBC,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CAACF,GAAIG,EAAAA,GAAYP,UACtBC,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,OAEnBP,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACX,UAAU,KAAKY,QAAQ,KAAIV,SAAC,aAGxCJ,EAAAA,EAAAA,MAACO,EAAAA,EAAG,CAACL,UAAU,OAAOa,SA5BL,SAAAC,GACrBA,EAAEC,iBACF,IAIMC,EAAW,CACfC,KALWH,EAAEI,cAAcC,SAASC,SAASC,MAM7CC,MALYR,EAAEI,cAAcC,SAASI,UAAUF,MAM/CG,SALeV,EAAEI,cAAcC,SAASM,aAAaJ,OAOvDzB,GAAS8B,EAAAA,EAAAA,IAAcV,IACpBW,SACAC,MAAK,kBAAMC,EAAAA,GAAAA,KAAW,UAAU,IAChCC,OAAM,SAAAC,GACLF,EAAAA,GAAAA,MAAY,gCACd,GACJ,EAWsDvB,GAAI,CAAE0B,GAAI,GAAI9B,SAAA,EAC5DC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAS,CACRC,OAAO,SACPC,WAAW,wEACXC,WAAY,CACVC,UAAW,OACXC,QAAS,qHAEXC,aAAa,OACbtB,KAAK,WACLqB,QAAQ,2HACRE,UAAQ,EACRC,WAAS,EACTC,MAAM,OACNC,WAAS,KAEXxC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAS,CACRC,OAAO,SACPM,UAAQ,EACRL,WAAW,qCAEXM,WAAS,EACTG,YAAY,sBACZC,GAAG,QACHH,MAAM,gBACNI,KAAK,QACL7B,KAAK,YACLqB,QAAQ,oDACRC,aAAa,WAEfpC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAS,CACRC,OAAO,SACPM,UAAQ,EACRI,YAAY,WACZT,WAAW,kDACXM,WAAS,EAETK,KAAK,WACL7B,KAAK,eACLyB,MAAM,WACNJ,QAAQ,6CACRO,GAAG,WACHN,aAAa,kBAEfpC,EAAAA,EAAAA,KAAC4C,EAAAA,EAAM,CACLD,KAAK,SACLL,WAAS,EACT7B,QAAQ,YACRN,GAAI,CAAE0B,GAAI,EAAGgB,GAAI,GAAI9C,SACtB,aAGDC,EAAAA,EAAAA,KAACE,EAAAA,EAAG,CAACC,GAAI2C,EAAAA,GAAgB/C,UACvBC,EAAAA,EAAAA,KAAC+C,EAAAA,EAAa,CAACC,GAAG,SAAQjD,SAAC,+CAQvC,C,wJC9GO,IAAMkD,EAAiB,SAAAC,GAAK,MAAK,CACtCC,SAAU,WACVC,gBAAiB,OACjBC,MAAO,OACPR,GAAI,EACJhB,GAAI,EACJyB,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,SACpBC,gBAAgB,OAADC,OAASR,EAAK,KAC7BS,UAAW,IACZ,EAEYC,EAAe,CAC1BT,SAAU,WACVU,EAAG,CAAEC,GAAI,EAAGC,GAAI,GAChBC,GAAI,CAAED,GAAI,IA2BC3D,EAAe,CAC1B6D,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UAGDtB,EAAkB,CAC7BoB,QAAS,OACTG,eAAgB,SAChBxB,GAAI,EACJuB,WAAY,UAGD9D,EAAc,CACzBgE,EAAG,EACHC,QAAS,iB","sources":["pages/RegisterPage.jsx","pages/StylesPages.jsx"],"sourcesContent":["import * as React from 'react';\nimport { toast } from 'react-toastify';\nimport {\n  Avatar,\n  Button,\n  Container,\n  Typography,\n  CssBaseline,\n  TextField,\n  Box,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nimport { avatarStyle, boxBottomFStyle, boxFormStyle } from './StylesPages';\nimport { StyledNavLink } from 'components/Navigation/StyleNav';\nimport { useDispatch } from 'react-redux';\nimport { registerThunk } from 'services/fetchAuth';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n\n  const onSubmitSignUp = e => {\n    e.preventDefault();\n    const name = e.currentTarget.elements.userName.value;\n    const email = e.currentTarget.elements.userEmail.value;\n    const password = e.currentTarget.elements.userPassword.value;\n\n    const formData = {\n      name,\n      email,\n      password,\n    };\n    dispatch(registerThunk(formData))\n      .unwrap()\n      .then(() => toast.info('Welcome'))\n      .catch(err => {\n        toast.error('error, try changing the data!');\n      });\n  };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box sx={boxFormStyle}>\n        <Avatar sx={avatarStyle}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Box component=\"form\" onSubmit={onSubmitSignUp} sx={{ mt: 1 }}>\n          <TextField\n            margin=\"normal\"\n            helperText=\"The name must contain only letters, apostrophes, hyphens and indents.\"\n            inputProps={{\n              inputMode: 'text',\n              pattern: '^[a-zA-Zа-яА-Я]+(([a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$',\n            }}\n            autoComplete=\"name\"\n            name=\"userName\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            required\n            fullWidth\n            label=\"Name\"\n            autoFocus\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            helperText=\"Please enter a valid email address\"\n            // inputProps={{ inputMode: 'email', pattern: \"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,}$\" }}\n            fullWidth\n            placeholder=\"hotmail@hotmail.com\"\n            id=\"email\"\n            label=\"Email Address\"\n            type=\"email\"\n            name=\"userEmail\"\n            pattern=\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$\"\n            autoComplete=\"email\"\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            placeholder=\"********\"\n            helperText=\"The password must contain at least 7 characters\"\n            fullWidth\n            // inputProps={{ inputMode: 'email', pattern: \"^[a-zA-Z0-9!@#$%^&*()-_=+`~{}|:<>/?]+$\" }}\n            type=\"password\"\n            name=\"userPassword\"\n            label=\"Password\"\n            pattern=\"^[a-zA-Z0-9!@#$%^&*()-_=+`~[\\]{}|:<>/?]+$\"\n            id=\"password\"\n            autoComplete=\"new-password\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign Up\n          </Button>\n          <Box sx={boxBottomFStyle}>\n            <StyledNavLink to=\"/login\">\n              Already have an account? Sign in\n            </StyledNavLink>\n          </Box>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default RegisterPage;\n","export const paperMainStyle = photo => ({\n  position: 'relative',\n  backgroundColor: 'grey',\n  color: '#fff',\n  mb: 4,\n  mt: 8,\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'bottom',\n  backgroundImage: `url(${photo})`,\n  minHeight: 700,\n});\n\nexport const boxMainStyle = {\n  position: 'relative',\n  p: { xs: 3, md: 6 },\n  pr: { md: 0 },\n};\n\nexport const containerContactsStyle = photo => ({\n  position: 'relative',\n  backgroundColor: 'grey.300',\n  color: '#0c0808',\n  mb: 4,\n  mt: 10,\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'top',\n  backgroundImage: `url(${photo})`,\n});\n\nexport const boxContactsStyle = {\n  bgcolor: 'rgba(145, 185, 229, 0.15)',\n  mx: 'auto',\n  borderRadius: 5,\n  maxWidth: 500,\n  px: 5,\n  marginTop: 10,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n};\n\nexport const boxFormStyle = {\n  marginTop: 8,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n};\n\nexport const boxBottomFStyle = {\n  display: 'flex',\n  justifyContent: 'center',\n  mb: 4,\n  alignItems: 'center',\n};\n\nexport const avatarStyle = {\n  m: 1,\n  bgcolor: 'secondary.main',\n};\n"],"names":["dispatch","useDispatch","_jsxs","Container","component","maxWidth","children","_jsx","CssBaseline","Box","sx","boxFormStyle","Avatar","avatarStyle","LockOutlinedIcon","Typography","variant","onSubmit","e","preventDefault","formData","name","currentTarget","elements","userName","value","email","userEmail","password","userPassword","registerThunk","unwrap","then","toast","catch","err","mt","TextField","margin","helperText","inputProps","inputMode","pattern","autoComplete","required","fullWidth","label","autoFocus","placeholder","id","type","Button","mb","boxBottomFStyle","StyledNavLink","to","paperMainStyle","photo","position","backgroundColor","color","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","concat","minHeight","boxMainStyle","p","xs","md","pr","marginTop","display","flexDirection","alignItems","justifyContent","m","bgcolor"],"sourceRoot":""}