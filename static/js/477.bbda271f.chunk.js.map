{"version":3,"file":"static/js/477.bbda271f.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.styled.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Error/Error.styled.jsx","components/Error/Error.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import styled from \"styled-components\";\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  max-width: 420px;\n  padding: 10px;\n  border-radius: 2px;\n  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.5);\n  margin: 30px 20px;\n`;\n\nexport const FormLabel = styled.label`\n  margin-top: 0;\n  margin-bottom: 12px;\n  font-weight: 500;\n  font-size: 18px;\n`;\n\nexport const FormInput = styled.input`\n  height: 20px;\n  font-size: 16px;\n  width: 400px;\n  margin-bottom: 6px;\n  padding: 5px;\n  border: none;\n  border-bottom: 1px solid teal;\n  &:focus,\n  &:hover,\n  &:active {\n    outline: 0;\n    outline-offset: 0;\n    border: none;\n    border-bottom: 1.5px solid teal;\n    outline: none;\n  }\n`;\n\nexport const FormButton = styled.button`\n  width: 100px;\n  height: 28px;\n  margin-left: 5px;\n  margin-top: 5px;\n  border-width: inherit;\n  border-radius: 5px;\n  outline: none;\n  background-color: #3645ab;\n  color: white;\n  cursor: pointer;\n  &:focus {\n    background-color: #2b3788;\n  }\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contactsStore.contacts;\nexport const selectContactsIsLoading = state => state.contactsStore.isLoading;\nexport const selectContactsError = state => state.contactsStore.error;\nexport const selectContactsFilterTerm = state => state.filterStore.filterTerm;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectContactsFilterTerm],\n  (contacts, filterTerm) =>\n    contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(filterTerm.toLowerCase().trim()) ||\n        contact.phone.toString().includes(filterTerm.toLowerCase().trim())\n    )\n);\n","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormInput, Form, FormButton, FormLabel } from './ContactForm.styled';\nimport { contactsSelectors, contactsSlices } from 'redux/contacts';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.selectContacts);\n\n  const onSubmitAddContact = e => {\n    e.preventDefault();\n    const data = {\n      name,\n      number: Number.parseFloat(number) || alert(`Number is not correct`),\n    };\n    const newContact = { ...data, id: nanoid() };\n\n    const isExist = contacts.some(\n      ({ name }) => name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (isExist) {\n      alert(`Oops, contact '${newContact.name}' is already in contacts!`);\n      return;\n    }\n\n    dispatch(contactsSlices.addContact(newContact));\n    setName('');\n    setNumber('');\n  };\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Form onSubmit={onSubmitAddContact}>\n      <FormLabel htmlFor=\"name\">Name</FormLabel>\n      <FormInput\n        type=\"text\"\n        name=\"name\"\n        onChange={handleInputChange}\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        required\n      />\n\n      <FormLabel htmlFor=\"number\">Number</FormLabel>\n      <FormInput\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleInputChange}\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        required\n      />\n\n      <FormButton type=\"submit\">Add contact</FormButton>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\nmargin: 20px;\nflex-direction: column;\ngap: 10px;\n`;\n\nexport const ContactItem = styled.li`\nmax-width: 400px;\n  padding: 20px;\n  background: white;\n  border-radius: 2px;\n  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.5);\n  transition: all 0.3s ease-out;\n  &:hover {\n    transform: scale(1.05);\n  }`;\n\nexport const CardWrapper = styled.div`\n  display: flex;\n  height: 100px;\n  flex-direction: row;\n  align-items: center;\n  gap: 8px;\n  justify-content: space-between;\n`;\n\nexport const Info = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.3px;\n`;\n\nexport const ButtonDelete = styled.button`\n  width: 70px;\n  height: 40px;\n  margin-left: 5px;\n  border-width: inherit;\n  border-radius: 5px;\n  outline: none;\n  background-color: #e22626;\n  color: white;\n  cursor: pointer;\n\n  &:focus {\n    background-color: #c72323;\n  }\n`;","import { useEffect } from 'react';\nimport {\n  List,\n  ContactItem,\n  CardWrapper,\n  ButtonDelete,\n  Info,\n} from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n// import {\n//   deleteContact,\n//   getContacts,\n// } from '../../redux/contacts/phoneBookSlice';\n// import { selectFilteredContacts } from 'redux/contacts/contactsSelectors';\nimport { contactsSelectors, contactsSlices } from 'redux/contacts';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(contactsSelectors.selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsSlices.getContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = contactId => {\n    dispatch(contactsSlices.deleteContact(contactId));\n  };\n\n  return (\n    <List>\n      {visibleContacts.map(({ name, phone, id }) => (\n        <ContactItem key={id}>\n          <CardWrapper>\n            <Info>{name}</Info>\n            <Info>{phone}</Info>\n            <ButtonDelete onClick={() => handleDeleteContact(id)}>\n              Delete\n            </ButtonDelete>\n          </CardWrapper>\n        </ContactItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 420px;\n  margin: 20px;\n\n  padding: 10px;\n  border-radius: 2px;\n  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.5);\n`;\n\nexport const FilterLabel = styled.label`\n  margin: 0px;\n  font-size: 18px;\n`;\n\nexport const FilterInput = styled.input`\n  max-width: 240px;\n  font-size: 14px;\n  padding: 5px;\n  display: block;\n  border: none;\n  border-bottom: 1px solid teal;\n  &:focus,\n  &:hover,\n  &:active {\n    outline: 0;\n    outline-offset: 0;\n    border: none;\n    border-bottom: 1.5px solid teal;\n  }\n`;\n","import React from 'react';\nimport { FilterContainer, FilterLabel, FilterInput } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { setFilterTerm } from '../../redux/contacts/filterSlice';\n// import { selectContactsFilterTerm } from 'redux/contacts/contactsSelectors';\nimport { contactsSelectors, filterSlice } from 'redux/contacts';\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterTerm = useSelector(contactsSelectors.selectContactsFilterTerm);\n\n  const changeFilter = event => {\n    const { value } = event.currentTarget;\n    dispatch(filterSlice.setFilterTerm(value));\n  };\n  return (\n    <FilterContainer>\n      <FilterLabel>\n        Find contact...\n        <FilterInput\n          type=\"text\"\n          value={filterTerm}\n          placeholder=\"Enter name...\"\n          onChange={changeFilter}\n        />\n      </FilterLabel>\n    </FilterContainer>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const WrapperError = styled.div`\n  text-align: center;\n  margin-top: 30px;\n  padding: 10px;\n  width: 400px;\n  font-weight: 500;\n  font-size: 20px;\n  background-color: #fa0e0ef6;\n`;\n","import { useSelector } from 'react-redux';\nimport { WrapperError } from './Error.styled';\n// import { selectContactsError } from 'redux/contacts/contactsSelectors';\nimport { contactsSelectors } from 'redux/contacts';\n\nexport const Error = () => {\n  const error = useSelector(contactsSelectors.selectContactsError);\n\n  return (\n    <WrapperError>\n      <p>We're sorry, {error}</p>\n    </WrapperError>\n  );\n};\n","import { ContactForm, ContactList, Filter } from 'components';\nimport { Loader } from 'components/Loader/Loader';\nimport { Error } from 'components/Error/Error';\nimport { useSelector } from 'react-redux';\nimport { contactsSelectors } from 'redux/contacts';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(contactsSelectors.selectContactsIsLoading);\n  const error = useSelector(contactsSelectors.selectContactsError);\n  const phoneBook = useSelector(contactsSelectors.selectContacts);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '15px',\n        margin: '0 auto',\n        padding: '30px',\n      }}\n    >\n      <h1 style={{ color: '#3645ab' }}>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {phoneBook.length === 0 && !error && !isLoading ? (\n        \"You don't have any contacts yet\"\n      ) : (\n        <Filter />\n      )}\n      {error ? <Error /> : <ContactList />}\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","Form","styled","_templateObject","_taggedTemplateLiteral","FormLabel","_templateObject2","FormInput","_templateObject3","FormButton","_templateObject4","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contactsStore","contacts","selectContactsIsLoading","isLoading","selectContactsError","error","selectContactsFilterTerm","filterStore","filterTerm","selectFilteredContacts","filter","contact","toLowerCase","includes","trim","phone","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","useSelector","contactsSelectors","handleInputChange","e","_e$currentTarget","currentTarget","_jsxs","onSubmit","preventDefault","data","Number","parseFloat","alert","newContact","_objectSpread","some","_ref","contactsSlices","children","_jsx","htmlFor","type","onChange","pattern","required","List","ContactItem","CardWrapper","Info","ButtonDelete","_templateObject5","visibleContacts","useEffect","onClick","contactId","FilterContainer","FilterLabel","FilterInput","placeholder","event","filterSlice","setFilterTerm","WrapperError","phoneBook","style","display","flexDirection","gap","margin","padding","color","ContactForm","Filter","ContactList","Loader"],"sourceRoot":""}